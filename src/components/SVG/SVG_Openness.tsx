import { getPercent } from "@/utils/getPercent";
import { useEffect, useState } from "react";

const DELAY = 10;
const STEP = 1;
const getInitialState = (maxNumber: number) => {
  return [
    { value: 0, divider: maxNumber * 0.06 },
    { value: 0, divider: maxNumber * 0.19 },
    { value: 0, divider: maxNumber * 0.33 },
    { value: 0, divider: maxNumber * 0.46 },
    { value: 0, divider: maxNumber * 0.6 },
    { value: 0, divider: maxNumber * 0.73 },
    { value: 0, divider: maxNumber * 0.87 },
    { value: 0, divider: maxNumber * 0.95 },
  ];
};

interface IOffset {
  value: number;
  divider: number;
}

export default function SVG_Openness({
  number,
  maxNumber,
  hover,
}: {
  number: number;
  maxNumber: number;
  hover: boolean;
}) {
  const [offset, setOffset] = useState<IOffset[]>(getInitialState(0));

  useEffect(() => {
    if (maxNumber === 0) return;
    setOffset(getInitialState(maxNumber));
  }, [maxNumber]);

  const gradients = offset.map((item, index) => {
    if (!item.value) console.log(item);
    return (
      <radialGradient key={index} id={`testGradient${index}`}>
        <stop offset={`${item.value / 2}%`} stopColor="transparent" />
        <stop offset={`${item.value * 1.5}%`} stopColor="cyan" />
      </radialGradient>
    );
  });

  useEffect(() => {
    const timeout = setTimeout(() => {
      const newOffsetArray = offset.map((item) => {
        const percent = hover
          ? getPercent({
              number,
              maxNumber,
              dividerNumber: item.divider,
            })
          : getPercent({
              number: item.divider,
              maxNumber,
              dividerNumber: item.divider,
            });
        const delta = Math.abs(percent - item.value);
        if (delta === 0) return item;

        if (delta > STEP) {
          return percent >= item.value
            ? { ...item, value: item.value + STEP }
            : { ...item, value: item.value - STEP };
        } else {
          return { ...item, value: percent };
        }
      });

      setOffset(newOffsetArray);
    }, DELAY);

    return () => clearTimeout(timeout);
  }, [number, maxNumber, JSON.stringify(offset)]);

  return (
    <svg
      id="logo"
      width="634"
      height="102"
      viewBox="0 0 634 102"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M26.4018 93.3033L26.4121 93.3092L26.4223 93.3149C33.6446 97.3775 41.6226 99.396 50.304 99.396C59.066 99.396 67.0875 97.3797 74.3137 93.3149L74.324 93.3092L74.3342 93.3033C81.5516 89.1532 87.2463 83.4109 91.3899 76.1146C95.551 68.7874 97.604 60.5033 97.604 51.328C97.604 42.1527 95.551 33.8686 91.3899 26.5414C87.2457 19.2439 81.5479 13.5407 74.3239 9.47482C67.0971 5.32184 59.0718 3.25999 50.304 3.25999C41.6167 3.25999 33.6348 5.32414 26.412 9.47486C19.1851 13.5424 13.449 19.2879 9.22302 26.6608L9.223 26.6608L9.2181 26.6694C5.0591 33.9929 3.004 42.2334 3.004 51.328C3.004 60.423 5.05917 68.7009 9.21164 76.1031L9.22053 76.119L9.22965 76.1347C13.457 83.4201 19.1892 89.156 26.4018 93.3033ZM65.8238 80.2659L65.8157 80.2706L65.8077 80.2753C61.2744 82.9327 56.1283 84.284 50.304 84.284C44.4835 84.284 39.2899 82.9343 34.6642 80.2705C30.1434 77.6184 26.5357 73.8331 23.8394 68.8423C21.2446 63.8826 19.908 58.068 19.908 51.328C19.908 44.4927 21.2485 38.6842 23.8355 33.821C26.5338 28.8236 30.1455 25.0344 34.6723 22.3807C39.2004 19.7264 44.3878 18.372 50.304 18.372C56.2202 18.372 61.4076 19.7264 65.9357 22.3807C70.4575 25.0314 74.0215 28.8136 76.6334 33.8L76.6445 33.8212L76.656 33.8421C79.3204 38.7008 80.7 44.5012 80.7 51.328C80.7 58.0626 79.3231 63.8718 76.648 68.8287L76.6406 68.8423L76.6334 68.856C74.0273 73.8314 70.4286 77.6123 65.8238 80.2659Z"
        strokeWidth="5"
        fill="url(#testGradient0)"
      />
      <path
        d="M164.186 53.254L164.187 53.2535C169.817 47.8111 172.629 40.9654 172.629 32.896C172.629 24.574 169.732 17.6183 163.893 12.2466C158.063 6.80375 149.717 4.284 139.281 4.284H110.481H107.981V6.784V96V98.5H110.481H122.129H124.629V96V61.252H139.281C150.028 61.252 158.501 58.7461 164.186 53.254ZM151.928 43.0851C149.515 45.2968 145.475 46.652 139.281 46.652H124.629V18.884H139.281C145.288 18.884 149.327 20.2004 151.846 22.3966C154.3 24.5356 155.725 27.8736 155.725 32.896C155.725 37.5876 154.36 40.8557 151.928 43.0851Z"
        strokeWidth="5"
        fill="url(#testGradient1)"
      />
      <path
        d="M231.266 46.08V43.58H228.766H198.754V18.756H232.606H235.106V16.256V6.65601V4.15601H232.606H184.606H182.106V6.65601V96V98.5H184.606H232.606H235.106V96V86.4V83.9H232.606H198.754V58.18H228.766H231.266V55.68V46.08Z"
        strokeWidth="5"
        fill="url(#testGradient2)"
      />
      <path
        d="M320.375 98.5H322.875V96V6.65601V4.15601H320.375H308.727H306.227V6.65601V69.2485L263.965 5.27796L263.224 4.15601H261.879H250.231H247.731V6.65601V96V98.5H250.231H261.879H264.379V96V33.2921L306.64 97.3763L307.381 98.5H308.727H320.375Z"
        strokeWidth="5"
        fill="url(#testGradient3)"
      />
      <path
        d="M410.375 98.5H412.875V96V6.65601V4.15601H410.375H398.727H396.227V6.65601V69.2485L353.965 5.27796L353.224 4.15601H351.879H340.231H337.731V6.65601V96V98.5H340.231H351.879H354.379V96V33.2921L396.64 97.3763L397.381 98.5H398.727H410.375Z"
        strokeWidth="5"
        fill="url(#testGradient4)"
      />
      <path
        d="M476.891 46.08V43.58H474.391H444.379V18.756H478.231H480.731V16.256V6.65601V4.15601H478.231H430.231H427.731V6.65601V96V98.5H430.231H478.231H480.731V96V86.4V83.9H478.231H444.379V58.18H474.391H476.891V55.68V46.08Z"
        strokeWidth="5"
        fill="url(#testGradient5)"
      />
      <path
        d="M507.222 96.0927L507.247 96.1043L507.272 96.1153C512.325 98.3201 517.963 99.396 524.144 99.396C530.614 99.396 536.364 98.1366 541.312 95.5225C546.179 92.9509 549.957 89.5388 552.528 85.2542C555.058 81.0375 556.34 76.4987 556.34 71.68C556.34 65.6948 554.981 60.65 551.972 56.8314C549.179 53.2046 545.784 50.4999 541.792 48.7841C538.048 47.0924 533.184 45.4348 527.246 43.7994C522.439 42.4501 518.737 41.2838 516.108 40.3003C513.813 39.3312 511.874 37.972 510.263 36.2207C508.955 34.7148 508.212 32.6983 508.212 29.952C508.212 26.0611 509.496 23.3299 511.888 21.4029L511.905 21.3898L511.92 21.3765C514.452 19.2672 517.814 18.116 522.224 18.116C527.001 18.116 530.564 19.3228 533.162 21.5003L533.178 21.5132L533.194 21.5259C535.947 23.7583 537.331 26.1957 537.663 28.8541L537.937 31.044H540.144H552.944H555.703L555.432 28.2983C554.684 20.7226 551.323 14.5474 545.398 9.93653C539.57 5.33342 532.159 3.13199 523.376 3.13199C517.277 3.13199 511.754 4.20918 506.857 6.4266L506.849 6.43032L506.84 6.43409C502.018 8.6598 498.186 11.8548 495.433 16.0322C492.667 20.2287 491.308 25.0247 491.308 30.336C491.308 36.2403 492.626 41.2557 495.514 45.1397L495.535 45.1687L495.558 45.1971C498.35 48.7343 501.699 51.3913 505.603 53.1051L505.613 53.1095L505.623 53.1139C509.365 54.7176 514.231 56.2895 520.177 57.841C524.91 59.1089 528.603 60.2747 531.292 61.334C533.763 62.3076 535.773 63.7073 537.371 65.5236C538.769 67.1125 539.564 69.2583 539.564 72.192C539.564 75.83 538.249 78.721 535.563 81.0546C532.991 83.2779 529.289 84.54 524.144 84.54C518.74 84.54 515.005 83.2345 512.548 80.997C510.003 78.5146 508.565 75.5284 508.199 71.9382L507.97 69.692H505.712H493.296H490.752L490.796 72.2358C490.89 77.5691 492.397 82.3712 495.348 86.5599L495.356 86.571L495.364 86.582C498.29 90.6408 502.273 93.8014 507.222 96.0927Z"
        strokeWidth="5"
        fill="url(#testGradient6)"
      />
      <path
        d="M582.347 96.0927L582.372 96.1043L582.397 96.1153C587.45 98.3201 593.088 99.396 599.269 99.396C605.739 99.396 611.489 98.1366 616.437 95.5225C621.304 92.9509 625.082 89.5388 627.653 85.2542C630.183 81.0375 631.465 76.4987 631.465 71.68C631.465 65.6948 630.106 60.65 627.097 56.8314C624.304 53.2046 620.909 50.4999 616.917 48.7841C613.173 47.0924 608.309 45.4348 602.371 43.7994C597.564 42.4501 593.862 41.2838 591.233 40.3003C588.938 39.3312 586.999 37.972 585.388 36.2207C584.08 34.7148 583.337 32.6983 583.337 29.952C583.337 26.0611 584.621 23.3299 587.013 21.4029L587.03 21.3898L587.045 21.3765C589.577 19.2672 592.939 18.116 597.349 18.116C602.126 18.116 605.689 19.3228 608.287 21.5003L608.303 21.5132L608.319 21.5259C611.072 23.7583 612.456 26.1957 612.788 28.8541L613.062 31.044H615.269H628.069H630.828L630.557 28.2983C629.809 20.7226 626.448 14.5474 620.523 9.93653C614.695 5.33342 607.284 3.13199 598.501 3.13199C592.402 3.13199 586.879 4.20918 581.982 6.4266L581.974 6.43032L581.965 6.43409C577.143 8.6598 573.311 11.8548 570.558 16.0322C567.792 20.2287 566.433 25.0246 566.433 30.336C566.433 36.2404 567.751 41.2557 570.639 45.1397L570.66 45.1687L570.683 45.1971C573.475 48.7343 576.825 51.3913 580.728 53.1051L580.738 53.1095L580.748 53.1139C584.49 54.7176 589.356 56.2895 595.302 57.841C600.035 59.1089 603.728 60.2747 606.417 61.334C608.888 62.3076 610.898 63.7073 612.496 65.5236C613.894 67.1125 614.689 69.2583 614.689 72.192C614.689 75.83 613.374 78.721 610.688 81.0546C608.116 83.2779 604.414 84.54 599.269 84.54C593.865 84.54 590.13 83.2345 587.673 80.997C585.128 78.5146 583.69 75.5283 583.324 71.9382L583.095 69.692H580.837H568.421H565.877L565.921 72.2358C566.015 77.5691 567.522 82.3712 570.473 86.5599L570.481 86.571L570.489 86.582C573.415 90.6408 577.398 93.8014 582.347 96.0927Z"
        strokeWidth="5"
        fill="url(#testGradient7)"
      />
      <defs>{gradients}</defs>
    </svg>
  );
}
